" vim: fdm=marker
" vim: foldlevel=0

"        _
" __   _(_)_ __ ___  _ __ ___
" \ \ / / | '_ ` _ \| '__/ __|
"  \ V /| | | | | | | | | (__
"   \_/ |_|_| |_| |_|_|  \___|
"
" copyright: (c) 2015 Gabriel Lima
"
" license: MIT
"

" CONTENTS:

" 1. Plugin Management --------------------------------------------------- {{{1

set nocompatible
filetype off

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'bling/vim-airline'
Plugin 'ewilazarus/vim-snnm'
Plugin 'flazz/vim-colorschemes'
Plugin 'gmarik/Vundle.vim'
Plugin 'honza/vim-snippets'
Plugin 'kien/ctrlp.vim'
Plugin 'majutsushi/tagbar'
Plugin 'mhinz/vim-sayonara'
Plugin 'mileszs/ack.vim'
Plugin 'kien/rainbow_parentheses.vim'
Plugin 'Raimondi/delimitMate'
Plugin 'scrooloose/nerdcommenter'
Plugin 'scrooloose/nerdtree'
Plugin 'scrooloose/syntastic'
Plugin 'sheerun/vim-polyglot'
Plugin 'sjl/gundo.vim'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-surround'
Plugin 'SirVer/ultisnips'
Plugin 'Valloric/YouCompleteMe'

call vundle#end()
filetype plugin indent on


" 2. Leader Key ---------------------------------------------------------- {{{1

let mapleader = "\<space>"


" 3. Editor Preferences -------------------------------------------------- {{{1

set encoding=utf-8
set nowrap
set backspace=indent,eol,start
set nobackup
set noswapfile
set foldlevel=99
set clipboard=unnamedplus
set mouse=a
set scrolloff=10
set spelllang=en_us
set visualbell

" Suppress 'ex-mode'
nnoremap Q <nop>

" 3.1. Tab Preferences --------------------------------------------------- {{{2
set tabstop=4
set smarttab
set shiftwidth=4
set autoindent
set shiftround
set copyindent
set completeopt=menu

" 3.2. Search Preferences ------------------------------------------------ {{{2
set showmatch
set ignorecase
set smartcase
set hlsearch
set incsearch

" Turns hlsearch on and keep search matches in the middle of the screen
nnoremap n :set hlsearch<cr>nzzzv
nnoremap N :set hlsearch<cr>Nzzzv

" Don't move on *
nnoremap * :set hlsearch<cr>*<c-o>


" 4. Appearance ---------------------------------------------------------- {{{1

syntax on
colorscheme jellybeans
"colorscheme badwolf

" Statusline
set laststatus=2

" Show line numbers
set number
set relativenumber

" Show column #80
set colorcolumn=80

" Display '.' for trailing whitespace
set list
set listchars=tab:\ \ ,trail:·


" 5. Mappings ------------------------------------------------------------ {{{1

" 5.1. Normal Mode ------------------------------------------------------- {{{2

" Window Resizing
nnoremap <silent>+ :vertical resize +5<cr>
nnoremap <silent>_ :vertical resize -5<cr>

" Window Movement
nnoremap <c-j> <c-w>j
nnoremap <c-k> <c-w>k
nnoremap <c-h> <c-w>h
nnoremap <c-l> <c-w>l

" Swapping lines
nnoremap \j ddp
nnoremap \k ddkP

" Add blank lines before or after
nnoremap <bar>j o<esc>k
nnoremap <bar>k O<esc>j

" Move through wrapped lines
nnoremap j gj
nnoremap k gk

" REdo
nnoremap U <c-r>

" Maps 'H' to BOL and 'L' to EOL
nnoremap gH 0
nnoremap H ^
nnoremap L $

" Nohlsearch
nnoremap <silent>\\ :noh<cr>

" Toggle paste mode
nnoremap <silent><F6> :set invpaste<cr>:set paste?<cr>

" Make Y behave like other capitals
nnoremap Y y$

" Cycle through buffers
nnoremap <left> :bprev<cr>
nnoremap <right> :bnext<cr>

" Make ctrl-d pageup, ctrl-s pagedown
nnoremap <c-d> <c-b>
nnoremap <c-s> <c-f>

" Navigation between definition and usage
nnoremap <c-r> <c-]>
nnoremap <c-e> <c-T>

" Save file
nnoremap <leader>w :w<cr>

" Save file (sudo)
nnoremap <leader><leader>w :w !sudo tee % >/dev/null<cr>

" Force quit
nnoremap <leader><leader>q :q!<cr>

" Select last modified text
nnoremap <c-y> `[v`]

" Toggles 'transparent' mode
nnoremap <silent><up> :call ToggleBackground()<cr>

" Quick search and replace
nnoremap <c-a>a /\v
nnoremap <c-a>s :%s//

" Documentation
nnoremap ? K

" Split line
nnoremap K i<cr><esc>

" Make jumping more comfortable in ABNT2 keyboard
nnoremap ' `

" Toggles between relative and absolute line numbers
nnoremap <silent>´ :call ToggleLineNumber()<cr>

" Toggles spelling
nnoremap <silent><down> :call ToggleSpellCheck()<cr>

" Redraw!
nnoremap <F1> :redraw!<cr>

" File format
nnoremap == ggVG=

" 'Fix' jumplist
nnoremap <c-o> g,
nnoremap <c-i> g;

" Increment number
nnoremap <c-c> <c-a>

" 5.2. Insert Mode ------------------------------------------------------- {{{2

" Make 'jk' and 'kj' leave insert mode
inoremap jk <esc>
inoremap kj <esc>

" Better pasting in insert mode
inoremap <F4> <c-r>"
inoremap <F5> <c-r>*

" Navigate in insert mode
inoremap <c-j> <down>
inoremap <c-k> <up>
inoremap <c-l> <right>

" 5.3. Visual Mode ------------------------------------------------------- {{{2

" Make 'space' leave visual mode
vnoremap <leader> <esc>

" Reselect visual block after indent
vnoremap < <gv
vnoremap > >gv

" Maps 'H' to BOL and 'L' to EOL
vnoremap H ^
vnoremap L $

" Make ctrl-d pageup, ctrl-s pagedown
vnoremap <c-d> <c-u>
vnoremap <c-s> <c-d>

" Quick replace
vnoremap , :s/

" 5.4. Command Mode ------------------------------------------------------ {{{2

" Make 'jk' and 'kj' leave command mode
cnoremap jk <c-u><bs>
cnoremap kj <c-u><bs>

" Navigate history
cnoremap <c-j> <down>
cnoremap <c-k> <up>

" Tweak .vimrc
command! Vimrc :next $MYVIMRC<cr>


" 6. Autocommands -------------------------------------------------------- {{{1

" RessurrectLine: Remember last opened line {{{
augroup RessurrectLine
	autocmd!
	autocmd BufReadPost *
				\ if line("'\"") > 0 && line("'\"") <= line("$") |
				\ exe "normal! g'\"" | 
				\ endif
augroup END
" }}}

" VimReload: Source .vimrc when save {{{
augroup VimReload
	autocmd!
	autocmd BufWritePost $MYVIMRC	source $MYVIMRC
augroup END
" }}}

" CursorLine: Don't show cursorline in insert mode {{{
augroup CursorLine
	au!
	au WinLeave,InsertEnter * set nocursorline
	au WinEnter,InsertLeave * set cursorline
augroup END
" }}}


" 7. Functions ----------------------------------------------------------- {{{1

function! ToggleLineNumber()  " {{{
	if(&relativenumber == 1)
		setlocal norelativenumber
	else
		setlocal relativenumber
	endif
endfunc
" }}}

function! ToggleBackground()  " {{{
	if(g:colors_name == "sol")
		colorscheme jellybeans
	else
		colorscheme sol-term
	endif
endfunc
" }}}

function! ToggleSpellCheck()
	set spell!	

	if(&spell == 1)
		nnoremap <silent><left> [s
		nnoremap <silent><right> ]s
		nnoremap <silent><up> z=
	else
		nnoremap <silent><left> :bprev<cr>k
		nnoremap <silent><right> :bnext<cr>
		nnoremap <silent><up> :call ToggleBackground()<cr>
	endif
endfunc

" 8. Plugin Customization ------------------------------------------------ {{{1

" Airline {{{
if !exists('g:airline_symbols')
	let g:airline_symbols = {}
endif

let g:airline_left_sep = ''
let g:airline_left_alt_sep = ''
let g:airline_right_sep = ''
let g:airline_right_alt_sep = ''
let g:airline_symbols.branch = ''
let g:airline_symbols.readonly = ''
let g:airline_symbols.linenr = ''
" }}}

" CtrlP {{{
let g:ctrlp_map = '<c-f>'
"let g:ctrlp_cmd = 'CtrlPBuffer'
" }}}

" DelimitMate {{{
let delimitMate_expand_cr = 1
let delimitMate_expand_space = 1
" }}}

" GUndo {{{
nnoremap <c-u> :GundoToggle<cr>
" }}}

" NERDCommenter {{{
map <silent>-- <plug>NERDCommenterToggle
" }}}

" NERDTree {{{
nnoremap <silent><c-n> :NERDTreeToggle<cr>
" }}}

" UltiSnips {{{
let g:UltiSnipsExpandTrigger = '<c-x>'
let g:UltiSnipsJumpForwardTrigger = '<tab>'
let g:UltiSnipsJumpBackwardTrigger = '<s-tab>'
" }}}

" Rainbow-Parentheses {{{
au VimEnter * RainbowParenthesesToggle
au Syntax * RainbowParenthesesLoadRound
au Syntax * RainbowParenthesesLoadSquare
au Syntax * RainbowParenthesesLoadBraces
" }}}

" Sayonara {{{
nnoremap <leader>q :Sayonara<cr>
" }}}

" Snnm {{{
let g:snnmapp = '/usr/local/bin/snnm'
" }}}

" Syntastic {{{
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
" }}}

" Tagbar {{{
nnoremap <silent><c-g> :TagbarToggle<cr>
let g:tagbar_autofocus = 1
" }}}

" YouCompleteMe {{{
let g:ycm_show_diagnostics_ui = 0
let g:ycm_key_list_select_completion=['<c-j>', '<down>']
let g:ycm_key_list_previous_completion=['<c-k>', '<up>']
" }}}
