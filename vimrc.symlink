" vim: fdm=marker
" vim: foldlevel=0

"        _
" __   _(_)_ __ ___  _ __ ___
" \ \ / / | '_ ` _ \| '__/ __|
"  \ V /| | | | | | | | | (__
"   \_/ |_|_| |_| |_|_|  \___|
"
" copyright: (c) 2015 Gabriel Lima
" license: MIT
"

" CONTENTS:

" 1. Plugin Management --------------------------------------------------- {{{1

set nocompatible
filetype off

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'airblade/vim-gitgutter'
Plugin 'bling/vim-airline'
Plugin 'chrisbra/NrrwRgn'
Plugin 'ewilazarus/vim-snnm'
Plugin 'flazz/vim-colorschemes'
Plugin 'gmarik/Vundle.vim'
Plugin 'honza/vim-snippets'
Plugin 'jiangmiao/auto-pairs'
Plugin 'kien/ctrlp.vim'
Plugin 'majutsushi/tagbar'
Plugin 'mattn/emmet-vim'
Plugin 'mileszs/ack.vim'
Plugin 'kien/rainbow_parentheses.vim'
Plugin 'reedes/vim-pencil'
Plugin 'scrooloose/nerdcommenter'
Plugin 'scrooloose/nerdtree'
Plugin 'scrooloose/syntastic'
Plugin 'sheerun/vim-polyglot'
Plugin 'tpope/vim-surround'
Plugin 'SirVer/ultisnips'
Plugin 'Valloric/YouCompleteMe'
Plugin 'mhinz/vim-sayonara'

call vundle#end()
filetype plugin indent on

" 2. Leader Key ---------------------------------------------------------- {{{1

let mapleader = "\<space>"


" 3. Editor Preferences -------------------------------------------------- {{{1

set encoding=utf-8
set nowrap
set backspace=indent,eol,start
set nobackup
set noswapfile
set foldlevel=99
set clipboard=unnamedplus
set mouse=a

" Supress 'ex-mode'
nnoremap Q <nop>

" 3.1. Tab Preferences --------------------------------------------------- {{{2
set tabstop=4
set smarttab
set shiftwidth=4
set autoindent
set shiftround
set copyindent
set completeopt=menu

" 3.2. Search Preferences ------------------------------------------------ {{{2
set showmatch
set ignorecase
set smartcase
set hlsearch
set incsearch

" Keep search matches in the middle of the screen
nnoremap n nzzzv
nnoremap N Nzzzv

" Don't move on *
nnoremap * *<c-o>

" 4. Appearence ---------------------------------------------------------- {{{1

syntax on
"colorscheme jellybeans
colorscheme badwolf

" Statusline
set laststatus=2

" Show line numbers
set number
set relativenumber

" Show colum #80
set colorcolumn=80

" Show highlighted current line
set cursorline
hi CursorLineNr ctermfg=DarkGray

" Display '.' for trailing whitespace
set list
set listchars=tab:\ \ ,trail:.

" 5. Mappings ------------------------------------------------------------ {{{1

" 5.1. Normal Mode ------------------------------------------------------- {{{2

" One less keystroke!
noremap ; :

" Window Resizing
noremap <silent>+ :vertical resize +5<cr>
noremap <silent>_ :vertical resize -5<cr>

" Window Movement
nnoremap <c-j> <c-w>j
nnoremap <c-k> <c-w>k
nnoremap <c-h> <c-w>h
nnoremap <c-l> <c-w>l

" Swaping lines
nnoremap \j ddp
nnoremap \k ddkP

" Add blank lines before or after
nnoremap <leader>j o<esc>k
nnoremap <leader>k O<esc>j

" Move through wrapped lines
nnoremap j gj
nnoremap k gk

" REdo
nnoremap U <c-r>

" Maps 'H' to BOL and 'L' to EOL
nnoremap H ^
nnoremap L $

" Nohlsearch
nnoremap <leader><space> :noh<cr>

" Toggle paste mode
nnoremap <silent> <c-p> :set invpaste<cr>:set paste?<cr>

" Make Y behave like other capitals
nnoremap Y y$

" Cycle through buffers
nnoremap <left> :bprev<cr>
nnoremap <right> :bnext<cr>

" Make ctrl-f pageup (pair with ctrl-d pagedown)
nnoremap <c-f> <c-u>

" Navigation between definition and usage
nnoremap d] <c-]>
nnoremap d[ <c-T>

" Save file
nnoremap <leader>w :w<cr>

" Force quit
nnoremap <leader><leader>q :q!<cr>

" 5.2. Insert Mode ------------------------------------------------------- {{{2

" Make 'jk' leave insert mode
inoremap jk <esc>

" Make " more practical in a PT-BR keyboard
imap '' "

" Navigate pairs
inoremap <c-l> <esc>/[)}"'\]>]<cr>:nohl<cr>a


" 5.3. Visual Mode ------------------------------------------------------- {{{2

" Reselect visual block after indent
vnoremap < <gv
vnoremap > >gv


" 5.4. Command Mode ------------------------------------------------------ {{{2

" Tweak .vimrc
command! Vimrc :next $MYVIMRC<cr>


" 6. Autocommands -------------------------------------------------------- {{{1

" Remember last opened line
augroup RessurrectLine
	autocmd!
  	autocmd BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
augroup END

" Source .vimrc when save
augroup VimReload
	autocmd!
	autocmd BufWritePost $MYVIMRC	source $MYVIMRC
augroup END


" 7. Plugin Customization ------------------------------------------------ {{{1

" Airline
if !exists('g:airline_symbols')
  let g:airline_symbols = {}
endif

let g:airline_left_sep = ''
let g:airline_left_alt_sep = ''
let g:airline_right_sep = ''
let g:airline_right_alt_sep = ''
let g:airline_symbols.branch = ''
let g:airline_symbols.readonly = ''
let g:airline_symbols.linenr = ''

" Auto-Pair
let g:AutoPairFlyMode = 1
let g:AutoPairsShortcutFastWrap = '<f4>'

" CtrlP
let g:ctrlp_map = '<c-s>'

" NERDCommenter
map <silent>-- <plug>NERDCommenterToggle

" NERDTree
nnoremap <silent><c-n> :NERDTreeToggle<cr>

" UltiSnips
let g:UltiSnipsExpandTrigger = '<c-j>'
let g:UltiSnipsJumpForwardTrigger = '<c-j>'
let g:UltiSnipsJumpBackwardTrigger = '<c-k>'
let g:UltiSnipsSnippetDirectories = ["UltiSnips", "my-snippets"]

" Rainbow-Parentheses
au VimEnter * RainbowParenthesesToggle
au Syntax * RainbowParenthesesLoadRound
au Syntax * RainbowParenthesesLoadSquare
au Syntax * RainbowParenthesesLoadBraces

" Snnm
let g:snnmapp = '/home/ewilazarus/.pyenv/versions/3.4.3/bin/snnm'

" Syntastic
let g:synstastic_always_populate_loc_list = 1
let g:synstastic_auto_loc_list = 1
let g:synstastic_check_on_open = 1

" Tagbar
nnoremap <silent>M :TagbarToggle<cr>
let g:tagbar_autofocus = 1

" Vim-pencil
augroup pencil
	autocmd!
	autocmd FileType markdown,mkd call pencil#init()
	autocmd FileType text call pencil#init()
augroup END
let g:pencil#conceallevel = 0

" Sayonara
nnoremap <leader>q :Sayonara<cr>
