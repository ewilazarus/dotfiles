" vim: fdm=marker
" vim: foldlevel=0

"        _
" __   _(_)_ __ ___  _ __ ___
" \ \ / / | '_ ` _ \| '__/ __|
"  \ V /| | | | | | | | | (__
"   \_/ |_|_| |_| |_|_|  \___|
"
" copyright: (c) 2015 Gabriel Lima
" license: MIT
"

" CONTENTS:

" 1. Plugin Management --------------------------------------------------- {{{1

set nocompatible
filetype off

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'bling/vim-airline'
Plugin 'ewilazarus/vim-snnm'
Plugin 'flazz/vim-colorschemes'
Plugin 'gmarik/Vundle.vim'
Plugin 'honza/vim-snippets'
Plugin 'kien/ctrlp.vim'
Plugin 'majutsushi/tagbar'
Plugin 'mattn/emmet-vim'
Plugin 'mileszs/ack.vim'
Plugin 'kien/rainbow_parentheses.vim'
Plugin 'Raimondi/delimitMate'
Plugin 'rhysd/clever-f.vim'
Plugin 'scrooloose/nerdcommenter'
Plugin 'scrooloose/nerdtree'
Plugin 'scrooloose/syntastic'
Plugin 'sheerun/vim-polyglot'
Plugin 'sjl/gundo.vim'
Plugin 'terryma/vim-multiple-cursors'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-surround'
Plugin 'SirVer/ultisnips'
Plugin 'Valloric/YouCompleteMe'
Plugin 'mhinz/vim-sayonara'

call vundle#end()
filetype plugin indent on

" 2. Leader Key ---------------------------------------------------------- {{{1

let mapleader = "\<space>"


" 3. Editor Preferences -------------------------------------------------- {{{1

set encoding=utf-8
set nowrap
set backspace=indent,eol,start
set nobackup
set noswapfile
set foldlevel=99
set clipboard=unnamedplus
set mouse=a

" Supress 'ex-mode'
nnoremap Q <nop>

" 3.1. Tab Preferences --------------------------------------------------- {{{2
set tabstop=4
set smarttab
set shiftwidth=4
set autoindent
set shiftround
set copyindent
set completeopt=menu

" 3.2. Search Preferences ------------------------------------------------ {{{2
set showmatch
set ignorecase
set smartcase
set hlsearch
set incsearch

" Keep search matches in the middle of the screen
nnoremap n nzzzv
nnoremap N Nzzzv

" Don't move on *
nnoremap * *<c-o>


" 4. Appearence ---------------------------------------------------------- {{{1

syntax on
colorscheme jellybeans
"colorscheme badwolf

" Statusline
set laststatus=2

" Show line numbers
set number
set relativenumber

" Show colum #80
set colorcolumn=80

" Show highlighted current line
set cursorline
hi CursorLineNr ctermfg=DarkGray

" Show highlighted selection
hi Visual ctermfg=LightGreen

" Display '.' for trailing whitespace
"set list
"set listchars=tab:\ \ ,trail:.


" 5. Mappings ------------------------------------------------------------ {{{1

" 5.1. Normal Mode ------------------------------------------------------- {{{2

" One less keystroke!
noremap ; :

" Window Resizing
noremap <silent>+ :vertical resize +5<cr>
noremap <silent>_ :vertical resize -5<cr>

" Window Movement
nnoremap <c-j> <c-w>j
nnoremap <c-k> <c-w>k
nnoremap <c-h> <c-w>h
nnoremap <c-l> <c-w>l

" Swaping lines
nnoremap \j ddp
nnoremap \k ddkP

" Add blank lines before or after
nnoremap <bar>j o<esc>k
nnoremap <bar>k O<esc>j

" Move through wrapped lines
nnoremap j gj
nnoremap k gk

" REdo
nnoremap U <c-r>

" Maps 'H' to BOL and 'L' to EOL
nnoremap H ^
nnoremap L $

" Nohlsearch
nnoremap <leader><space> :noh<cr>

" Toggle paste mode
nnoremap <silent> <c-p> :set invpaste<cr>:set paste?<cr>

" Make Y behave like other capitals
nnoremap Y y$

" Cycle through buffers
nnoremap <left> :bprev<cr>
nnoremap <right> :bnext<cr>

" Make ctrl-d pageup, ctrl-s pagedown
nnoremap <c-d> <c-u>
nnoremap <c-s> <c-d>

" Navigation between definition and usage
nnoremap <c-r> <c-]>
nnoremap <c-e> <c-T>

" Save file
nnoremap <leader>w :w<cr>

" Force quit
nnoremap <leader><leader>q :q!<cr>

" Select last modifyed text
nnoremap <c-g> `[v`]

" Toggles 'transparent' mode
nnoremap <silent><up> :hi normal ctermbg=233<cr>:hi nontext ctermbg=233<cr>
nnoremap <silent><down> :hi normal ctermbg=none<cr>:hi nontext ctermbg=none<cr>

" 5.2. Insert Mode ------------------------------------------------------- {{{2

" Make 'jk' and 'kj' leave insert mode
inoremap jk <esc>
inoremap kj <esc>

" Navigate right without arrows
inoremap <c-l> <right>

" 5.3. Visual Mode ------------------------------------------------------- {{{2
"
" Make 'space' leave visual mode
vnoremap <leader> <esc>

" Reselect visual block after indent
vnoremap < <gv
vnoremap > >gv

" Maps 'H' to BOL and 'L' to EOL
vnoremap H ^
vnoremap L $

" Make ctrl-d pageup, ctrl-s pagedown
vnoremap <c-d> <c-u>
vnoremap <c-s> <c-d>


" 5.4. Command Mode ------------------------------------------------------ {{{2

" Tweak .vimrc
command! Vimrc :next $MYVIMRC<cr>


" 6. Autocommands -------------------------------------------------------- {{{1

" Remember last opened line
augroup RessurrectLine
	autocmd!
  	autocmd BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
augroup END

" Source .vimrc when save
augroup VimReload
	autocmd!
	autocmd BufWritePost $MYVIMRC	source $MYVIMRC
augroup END


" 7. Plugin Customization ------------------------------------------------ {{{1

" Airline
if !exists('g:airline_symbols')
  let g:airline_symbols = {}
endif

let g:airline_left_sep = ''
let g:airline_left_alt_sep = ''
let g:airline_right_sep = ''
let g:airline_right_alt_sep = ''
let g:airline_symbols.branch = ''
let g:airline_symbols.readonly = ''
let g:airline_symbols.linenr = ''

" CtrlP
let g:ctrlp_map = '<c-f>'
let g:ctrlp_cmd = 'CtrlPBuffer'

" DelimitMate
let delimitMate_expand_cr = 1
let delimitMate_expand_space = 1

" GUndo
nnoremap <c-u> :GundoToggle<cr>

" MultipleCursors
let g:multi_cursor_use_default_mapping = 0
let g:multi_cursor_next_key = '<c-z>'
let g:multi_cursor_prev_key = '<c-i>'
let g:multi_cursor_skip_key = '<c-o>'
let g:multi_cursor_quit_key = '<c-p>'

" NERDCommenter
map <silent>-- <plug>NERDCommenterToggle

" NERDTree
nnoremap <silent><c-n> :NERDTreeToggle<cr>

" UltiSnips
let g:UltiSnipsExpandTrigger = '<c-x>'
let g:UltiSnipsJumpForwardTrigger = '<tab>'
let g:UltiSnipsJumpBackwardTrigger = '<s-tab>'

" Rainbow-Parentheses
au VimEnter * RainbowParenthesesToggle
au Syntax * RainbowParenthesesLoadRound
au Syntax * RainbowParenthesesLoadSquare
au Syntax * RainbowParenthesesLoadBraces

" Sayonara
nnoremap <leader>q :Sayonara<cr>

" Snnm
let g:snnmapp = '/usr/local/bin/snnm'

" Syntastic
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1

" Tagbar
nnoremap <silent><c-b> :TagbarToggle<cr>
let g:tagbar_autofocus = 1

" YouCompleteMe
let g:ycm_show_diagnostics_ui = 0
let g:ycm_key_list_select_completion=['<c-j>', '<down>']
let g:ycm_key_list_previous_completion=['<c-k>', '<up>']
